// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addBranch() can be used for additional release branches 1`] = `
Object {
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/.gitattributes                    	linguist-generated
/.github/workflows/release-10.x.yml	linguist-generated
/.github/workflows/release-2.x.yml 	linguist-generated
/.github/workflows/release.yml     	linguist-generated
/.github/workflows/stale.yml       	linguist-generated
/.gitignore                        	linguist-generated
/.projen/**                        	linguist-generated
/.projen/deps.json                 	linguist-generated
/.projen/tasks.json                	linguist-generated",
  ".github/workflows/release-10.x.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release-10.x
on:
  push:
    branches:
      - 10.x
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release:10.x
        run: projen release:10.x
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/release-2.x.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release-2.x
on:
  push:
    branches:
      - 2.x
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release:2.x
        run: projen release:2.x
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/stale.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: stale
on:
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch: {}
jobs:
  stale:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/stale@v4
        with:
          days-before-stale: -1
          days-before-close: -1
          days-before-pr-stale: 14
          days-before-pr-close: 2
          stale-pr-message: This pull request is now marked as stale because it hasn't
            seen activity for a while. Add a comment or it will be closed soon.
          close-pr-message: Closing this pull request as it hasn't seen activity for a
            while. Please add a comment @mentioning a maintainer to reopen.
          stale-pr-label: stale
          days-before-issue-stale: 60
          days-before-issue-close: 7
          stale-issue-message: This issue is now marked as stale because it hasn't seen
            activity for a while. Add a comment or it will be closed soon.
          close-issue-message: Closing this issue as it hasn't seen activity for a while.
            Please add a comment @mentioning a maintainer to reopen.
          stale-issue-label: stale
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
/dist/changelog.md
/dist/version.txt
node_modules/
!/.gitattributes
!/.github/workflows/release-10.x.yml
!/.github/workflows/release-2.x.yml
!/.github/workflows/release.yml
!/.github/workflows/stale.yml
!/.projen/deps.json
!/.projen/tasks.json
",
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "name": "build",
      },
      "bump": Object {
        "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
        "description": "Bumps version based on latest git tag and generates a changelog entry",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "bump",
        "steps": Array [
          Object {
            "builtin": "release/bump-version",
          },
        ],
      },
      "publish:github": Object {
        "description": "Publish this package to GitHub Releases",
        "name": "publish:github",
        "requiredEnv": Array [
          "GITHUB_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
          },
        ],
      },
      "release": Object {
        "description": "Prepare a release from \\"main\\" branch",
        "env": Object {
          "MAJOR": "1",
          "RELEASE": "true",
        },
        "name": "release",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "release:10.x": Object {
        "description": "Prepare a release from \\"10.x\\" branch",
        "env": Object {
          "MAJOR": "10",
          "RELEASE": "true",
        },
        "name": "release:10.x",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "release:2.x": Object {
        "description": "Prepare a release from \\"2.x\\" branch",
        "env": Object {
          "MAJOR": "2",
          "RELEASE": "true",
        },
        "name": "release:2.x",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "unbump": Object {
        "description": "Restores version to 0.0.0",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "unbump",
        "steps": Array [
          Object {
            "builtin": "release/reset-version",
          },
        ],
      },
    },
  },
  "README.md": "# replace this",
}
`;

exports[`addJobs() can be used to add arbitrary jobs to the release workflows 1`] = `
Object {
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/.gitattributes                    	linguist-generated
/.github/workflows/foo-workflow.yml	linguist-generated
/.github/workflows/release.yml     	linguist-generated
/.github/workflows/stale.yml       	linguist-generated
/.gitignore                        	linguist-generated
/.projen/**                        	linguist-generated
/.projen/deps.json                 	linguist-generated
/.projen/tasks.json                	linguist-generated",
  ".github/workflows/foo-workflow.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: foo-workflow
on:
  push:
    branches:
      - foo
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release:foo
        run: projen release:foo
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
  release_pypi:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-pypi
        env:
          TWINE_USERNAME: \${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: \${{ secrets.TWINE_PASSWORD }}
    container:
      image: jsii/superchain
  random_job:
    runs-on: foo
    permissions:
      actions: none
    steps: []
",
  ".github/workflows/release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
  release_pypi:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-pypi
        env:
          TWINE_USERNAME: \${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: \${{ secrets.TWINE_PASSWORD }}
    container:
      image: jsii/superchain
  random_job:
    runs-on: foo
    permissions:
      actions: none
    steps: []
",
  ".github/workflows/stale.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: stale
on:
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch: {}
jobs:
  stale:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/stale@v4
        with:
          days-before-stale: -1
          days-before-close: -1
          days-before-pr-stale: 14
          days-before-pr-close: 2
          stale-pr-message: This pull request is now marked as stale because it hasn't
            seen activity for a while. Add a comment or it will be closed soon.
          close-pr-message: Closing this pull request as it hasn't seen activity for a
            while. Please add a comment @mentioning a maintainer to reopen.
          stale-pr-label: stale
          days-before-issue-stale: 60
          days-before-issue-close: 7
          stale-issue-message: This issue is now marked as stale because it hasn't seen
            activity for a while. Add a comment or it will be closed soon.
          close-issue-message: Closing this issue as it hasn't seen activity for a while.
            Please add a comment @mentioning a maintainer to reopen.
          stale-issue-label: stale
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
/dist/changelog.md
/dist/version.txt
node_modules/
!/.gitattributes
!/.github/workflows/foo-workflow.yml
!/.github/workflows/release.yml
!/.github/workflows/stale.yml
!/.projen/deps.json
!/.projen/tasks.json
",
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "name": "build",
      },
      "bump": Object {
        "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
        "description": "Bumps version based on latest git tag and generates a changelog entry",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "bump",
        "steps": Array [
          Object {
            "builtin": "release/bump-version",
          },
        ],
      },
      "publish:github": Object {
        "description": "Publish this package to GitHub Releases",
        "name": "publish:github",
        "requiredEnv": Array [
          "GITHUB_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
          },
        ],
      },
      "publish:pypi": Object {
        "description": "Publish this package to PyPI",
        "name": "publish:pypi",
        "requiredEnv": Array [
          "TWINE_USERNAME",
          "TWINE_PASSWORD",
        ],
        "steps": Array [
          Object {
            "exec": "npx -p jsii-release@latest jsii-release-pypi",
          },
        ],
      },
      "release": Object {
        "description": "Prepare a release from \\"main\\" branch",
        "env": Object {
          "MAJOR": "0",
          "RELEASE": "true",
        },
        "name": "release",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "release:foo": Object {
        "description": "Prepare a release from \\"foo\\" branch",
        "env": Object {
          "MAJOR": "4",
          "RELEASE": "true",
        },
        "name": "release:foo",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "unbump": Object {
        "description": "Restores version to 0.0.0",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "unbump",
        "steps": Array [
          Object {
            "builtin": "release/reset-version",
          },
        ],
      },
    },
  },
  "README.md": "# replace this",
}
`;

exports[`github packages are supported by npm 1`] = `
Object {
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/.gitattributes               	linguist-generated
/.github/workflows/release.yml	linguist-generated
/.github/workflows/stale.yml  	linguist-generated
/.gitignore                   	linguist-generated
/.projen/**                   	linguist-generated
/.projen/deps.json            	linguist-generated
/.projen/tasks.json           	linguist-generated",
  ".github/workflows/release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-npm
        env:
          NPM_REGISTRY: npm.pkg.github.com
          NPM_TOKEN: \${{ secrets.GITHUB_TOKEN }}
    container:
      image: jsii/superchain
",
  ".github/workflows/stale.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: stale
on:
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch: {}
jobs:
  stale:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/stale@v4
        with:
          days-before-stale: -1
          days-before-close: -1
          days-before-pr-stale: 14
          days-before-pr-close: 2
          stale-pr-message: This pull request is now marked as stale because it hasn't
            seen activity for a while. Add a comment or it will be closed soon.
          close-pr-message: Closing this pull request as it hasn't seen activity for a
            while. Please add a comment @mentioning a maintainer to reopen.
          stale-pr-label: stale
          days-before-issue-stale: 60
          days-before-issue-close: 7
          stale-issue-message: This issue is now marked as stale because it hasn't seen
            activity for a while. Add a comment or it will be closed soon.
          close-issue-message: Closing this issue as it hasn't seen activity for a while.
            Please add a comment @mentioning a maintainer to reopen.
          stale-issue-label: stale
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
/dist/changelog.md
/dist/version.txt
node_modules/
!/.gitattributes
!/.github/workflows/release.yml
!/.github/workflows/stale.yml
!/.projen/deps.json
!/.projen/tasks.json
",
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "name": "build",
      },
      "bump": Object {
        "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
        "description": "Bumps version based on latest git tag and generates a changelog entry",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "bump",
        "steps": Array [
          Object {
            "builtin": "release/bump-version",
          },
        ],
      },
      "publish:github": Object {
        "description": "Publish this package to GitHub Releases",
        "name": "publish:github",
        "requiredEnv": Array [
          "GITHUB_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
          },
        ],
      },
      "publish:npm": Object {
        "description": "Publish this package to npm",
        "env": Object {
          "NPM_REGISTRY": "npm.pkg.github.com",
        },
        "name": "publish:npm",
        "requiredEnv": Array [
          "NPM_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "npx -p jsii-release@latest jsii-release-npm",
          },
        ],
      },
      "release": Object {
        "description": "Prepare a release from \\"main\\" branch",
        "env": Object {
          "RELEASE": "true",
        },
        "name": "release",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "unbump": Object {
        "description": "Restores version to 0.0.0",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "unbump",
        "steps": Array [
          Object {
            "builtin": "release/reset-version",
          },
        ],
      },
    },
  },
  "README.md": "# replace this",
}
`;

exports[`majorVersion can be 0 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
"
`;

exports[`majorVersion can be 0 2`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "tasks": Object {
    "build": Object {
      "name": "build",
    },
    "bump": Object {
      "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": Object {
        "BUMPFILE": "dist/version.txt",
        "CHANGELOG": "dist/changelog.md",
        "OUTFILE": "goo.json",
      },
      "name": "bump",
      "steps": Array [
        Object {
          "builtin": "release/bump-version",
        },
      ],
    },
    "publish:github": Object {
      "description": "Publish this package to GitHub Releases",
      "name": "publish:github",
      "requiredEnv": Array [
        "GITHUB_TOKEN",
      ],
      "steps": Array [
        Object {
          "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
        },
      ],
    },
    "release": Object {
      "description": "Prepare a release from \\"main\\" branch",
      "env": Object {
        "MAJOR": "0",
        "RELEASE": "true",
      },
      "name": "release",
      "steps": Array [
        Object {
          "exec": "rm -fr dist",
        },
        Object {
          "spawn": "bump",
        },
        Object {
          "spawn": "build",
        },
        Object {
          "spawn": "unbump",
        },
        Object {
          "exec": "git diff --ignore-space-at-eol --exit-code",
        },
      ],
    },
    "unbump": Object {
      "description": "Restores version to 0.0.0",
      "env": Object {
        "BUMPFILE": "dist/version.txt",
        "CHANGELOG": "dist/changelog.md",
        "OUTFILE": "goo.json",
      },
      "name": "unbump",
      "steps": Array [
        Object {
          "builtin": "release/reset-version",
        },
      ],
    },
  },
}
`;

exports[`minimal 1`] = `
Object {
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/.gitattributes               	linguist-generated
/.github/workflows/release.yml	linguist-generated
/.github/workflows/stale.yml  	linguist-generated
/.gitignore                   	linguist-generated
/.projen/**                   	linguist-generated
/.projen/deps.json            	linguist-generated
/.projen/tasks.json           	linguist-generated",
  ".github/workflows/release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/stale.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: stale
on:
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch: {}
jobs:
  stale:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/stale@v4
        with:
          days-before-stale: -1
          days-before-close: -1
          days-before-pr-stale: 14
          days-before-pr-close: 2
          stale-pr-message: This pull request is now marked as stale because it hasn't
            seen activity for a while. Add a comment or it will be closed soon.
          close-pr-message: Closing this pull request as it hasn't seen activity for a
            while. Please add a comment @mentioning a maintainer to reopen.
          stale-pr-label: stale
          days-before-issue-stale: 60
          days-before-issue-close: 7
          stale-issue-message: This issue is now marked as stale because it hasn't seen
            activity for a while. Add a comment or it will be closed soon.
          close-issue-message: Closing this issue as it hasn't seen activity for a while.
            Please add a comment @mentioning a maintainer to reopen.
          stale-issue-label: stale
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
/dist/changelog.md
/dist/version.txt
node_modules/
!/.gitattributes
!/.github/workflows/release.yml
!/.github/workflows/stale.yml
!/.projen/deps.json
!/.projen/tasks.json
",
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "name": "build",
      },
      "bump": Object {
        "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
        "description": "Bumps version based on latest git tag and generates a changelog entry",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "bump",
        "steps": Array [
          Object {
            "builtin": "release/bump-version",
          },
        ],
      },
      "publish:github": Object {
        "description": "Publish this package to GitHub Releases",
        "name": "publish:github",
        "requiredEnv": Array [
          "GITHUB_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
          },
        ],
      },
      "release": Object {
        "description": "Prepare a release from \\"main\\" branch",
        "env": Object {
          "RELEASE": "true",
        },
        "name": "release",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "unbump": Object {
        "description": "Restores version to 0.0.0",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "unbump",
        "steps": Array [
          Object {
            "builtin": "release/reset-version",
          },
        ],
      },
    },
  },
  "README.md": "# replace this",
}
`;

exports[`prerelease can be specified per branch 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
"
`;

exports[`prerelease can be specified per branch 2`] = `undefined`;

exports[`prerelease can be specified per branch 3`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "tasks": Object {
    "build": Object {
      "name": "build",
    },
    "bump": Object {
      "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": Object {
        "BUMPFILE": "dist/version.txt",
        "CHANGELOG": "dist/changelog.md",
        "OUTFILE": "goo.json",
      },
      "name": "bump",
      "steps": Array [
        Object {
          "builtin": "release/bump-version",
        },
      ],
    },
    "publish:github": Object {
      "description": "Publish this package to GitHub Releases",
      "name": "publish:github",
      "requiredEnv": Array [
        "GITHUB_TOKEN",
      ],
      "steps": Array [
        Object {
          "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
        },
      ],
    },
    "release": Object {
      "description": "Prepare a release from \\"main\\" branch",
      "env": Object {
        "MAJOR": "0",
        "RELEASE": "true",
      },
      "name": "release",
      "steps": Array [
        Object {
          "exec": "rm -fr dist",
        },
        Object {
          "spawn": "bump",
        },
        Object {
          "spawn": "build",
        },
        Object {
          "spawn": "unbump",
        },
        Object {
          "exec": "git diff --ignore-space-at-eol --exit-code",
        },
      ],
    },
    "release:10.x": Object {
      "description": "Prepare a release from \\"10.x\\" branch",
      "env": Object {
        "MAJOR": "10",
        "PRERELEASE": "pre",
        "RELEASE": "true",
      },
      "name": "release:10.x",
      "steps": Array [
        Object {
          "exec": "rm -fr dist",
        },
        Object {
          "spawn": "bump",
        },
        Object {
          "spawn": "build",
        },
        Object {
          "spawn": "unbump",
        },
        Object {
          "exec": "git diff --ignore-space-at-eol --exit-code",
        },
      ],
    },
    "unbump": Object {
      "description": "Restores version to 0.0.0",
      "env": Object {
        "BUMPFILE": "dist/version.txt",
        "CHANGELOG": "dist/changelog.md",
        "OUTFILE": "goo.json",
      },
      "name": "unbump",
      "steps": Array [
        Object {
          "builtin": "release/reset-version",
        },
      ],
    },
  },
}
`;

exports[`publisher (defaults) 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
  release_golang:
    name: Publish to GitHub
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-golang
        env:
          GIT_USER_NAME: GitHub Actions
          GIT_USER_EMAIL: github-actions@github.com
          GITHUB_TOKEN: \${{ secrets.GO_GITHUB_TOKEN }}
    container:
      image: jsii/superchain
  release_maven:
    name: Publish to Maven Central
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-maven
        env:
          MAVEN_GPG_PRIVATE_KEY: \${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: \${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}
          MAVEN_PASSWORD: \${{ secrets.MAVEN_PASSWORD }}
          MAVEN_USERNAME: \${{ secrets.MAVEN_USERNAME }}
          MAVEN_STAGING_PROFILE_ID: \${{ secrets.MAVEN_STAGING_PROFILE_ID }}
    container:
      image: jsii/superchain
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-npm
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}
    container:
      image: jsii/superchain
  release_nuget:
    name: Publish to NuGet Gallery
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-nuget
        env:
          NUGET_API_KEY: \${{ secrets.NUGET_API_KEY }}
    container:
      image: jsii/superchain
  release_pypi:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-pypi
        env:
          TWINE_USERNAME: \${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: \${{ secrets.TWINE_PASSWORD }}
    container:
      image: jsii/superchain
"
`;

exports[`publisher (defaults) 2`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "tasks": Object {
    "build": Object {
      "name": "build",
    },
    "bump": Object {
      "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": Object {
        "BUMPFILE": "dist/version.txt",
        "CHANGELOG": "dist/changelog.md",
        "OUTFILE": "version.json",
      },
      "name": "bump",
      "steps": Array [
        Object {
          "builtin": "release/bump-version",
        },
      ],
    },
    "publish:github": Object {
      "description": "Publish this package to GitHub Releases",
      "name": "publish:github",
      "requiredEnv": Array [
        "GITHUB_TOKEN",
      ],
      "steps": Array [
        Object {
          "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
        },
      ],
    },
    "publish:golang": Object {
      "description": "Publish this package to GitHub",
      "env": Object {
        "GIT_USER_EMAIL": "github-actions@github.com",
        "GIT_USER_NAME": "GitHub Actions",
      },
      "name": "publish:golang",
      "requiredEnv": Array [
        "GITHUB_TOKEN",
      ],
      "steps": Array [
        Object {
          "exec": "npx -p jsii-release@latest jsii-release-golang",
        },
      ],
    },
    "publish:maven": Object {
      "description": "Publish this package to Maven Central",
      "name": "publish:maven",
      "requiredEnv": Array [
        "MAVEN_GPG_PRIVATE_KEY",
        "MAVEN_GPG_PRIVATE_KEY_PASSPHRASE",
        "MAVEN_PASSWORD",
        "MAVEN_USERNAME",
        "MAVEN_STAGING_PROFILE_ID",
      ],
      "steps": Array [
        Object {
          "exec": "npx -p jsii-release@latest jsii-release-maven",
        },
      ],
    },
    "publish:npm": Object {
      "description": "Publish this package to npm",
      "name": "publish:npm",
      "requiredEnv": Array [
        "NPM_TOKEN",
      ],
      "steps": Array [
        Object {
          "exec": "npx -p jsii-release@latest jsii-release-npm",
        },
      ],
    },
    "publish:nuget": Object {
      "description": "Publish this package to NuGet Gallery",
      "name": "publish:nuget",
      "requiredEnv": Array [
        "NUGET_API_KEY",
      ],
      "steps": Array [
        Object {
          "exec": "npx -p jsii-release@latest jsii-release-nuget",
        },
      ],
    },
    "publish:pypi": Object {
      "description": "Publish this package to PyPI",
      "name": "publish:pypi",
      "requiredEnv": Array [
        "TWINE_USERNAME",
        "TWINE_PASSWORD",
      ],
      "steps": Array [
        Object {
          "exec": "npx -p jsii-release@latest jsii-release-pypi",
        },
      ],
    },
    "release": Object {
      "description": "Prepare a release from \\"main\\" branch",
      "env": Object {
        "RELEASE": "true",
      },
      "name": "release",
      "steps": Array [
        Object {
          "exec": "rm -fr dist",
        },
        Object {
          "spawn": "bump",
        },
        Object {
          "spawn": "build",
        },
        Object {
          "spawn": "unbump",
        },
        Object {
          "exec": "git diff --ignore-space-at-eol --exit-code",
        },
      ],
    },
    "unbump": Object {
      "description": "Restores version to 0.0.0",
      "env": Object {
        "BUMPFILE": "dist/version.txt",
        "CHANGELOG": "dist/changelog.md",
        "OUTFILE": "version.json",
      },
      "name": "unbump",
      "steps": Array [
        Object {
          "builtin": "release/reset-version",
        },
      ],
    },
  },
}
`;

exports[`releaseBranches can be use to define additional branches 1`] = `
Object {
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/.gitattributes                    	linguist-generated
/.github/workflows/release-3.x.yml 	linguist-generated
/.github/workflows/release-next.yml	linguist-generated
/.github/workflows/release.yml     	linguist-generated
/.github/workflows/stale.yml       	linguist-generated
/.gitignore                        	linguist-generated
/.projen/**                        	linguist-generated
/.projen/deps.json                 	linguist-generated
/.projen/tasks.json                	linguist-generated",
  ".github/workflows/release-3.x.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release-3.x
on:
  push:
    branches:
      - 3.x
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release:3.x
        run: projen release:3.x
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/release-next.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release-next
on:
  push:
    branches:
      - next
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release:next
        run: projen release:next
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release
        run: projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/stale.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: stale
on:
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch: {}
jobs:
  stale:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/stale@v4
        with:
          days-before-stale: -1
          days-before-close: -1
          days-before-pr-stale: 14
          days-before-pr-close: 2
          stale-pr-message: This pull request is now marked as stale because it hasn't
            seen activity for a while. Add a comment or it will be closed soon.
          close-pr-message: Closing this pull request as it hasn't seen activity for a
            while. Please add a comment @mentioning a maintainer to reopen.
          stale-pr-label: stale
          days-before-issue-stale: 60
          days-before-issue-close: 7
          stale-issue-message: This issue is now marked as stale because it hasn't seen
            activity for a while. Add a comment or it will be closed soon.
          close-issue-message: Closing this issue as it hasn't seen activity for a while.
            Please add a comment @mentioning a maintainer to reopen.
          stale-issue-label: stale
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
/dist/changelog.md
/dist/version.txt
node_modules/
!/.gitattributes
!/.github/workflows/release-3.x.yml
!/.github/workflows/release-next.yml
!/.github/workflows/release.yml
!/.github/workflows/stale.yml
!/.projen/deps.json
!/.projen/tasks.json
",
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "name": "build",
      },
      "bump": Object {
        "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
        "description": "Bumps version based on latest git tag and generates a changelog entry",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "goo.json",
        },
        "name": "bump",
        "steps": Array [
          Object {
            "builtin": "release/bump-version",
          },
        ],
      },
      "publish:github": Object {
        "description": "Publish this package to GitHub Releases",
        "name": "publish:github",
        "requiredEnv": Array [
          "GITHUB_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
          },
        ],
      },
      "release": Object {
        "description": "Prepare a release from \\"main\\" branch",
        "env": Object {
          "MAJOR": "1",
          "RELEASE": "true",
        },
        "name": "release",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "release:3.x": Object {
        "description": "Prepare a release from \\"3.x\\" branch",
        "env": Object {
          "MAJOR": "3",
          "RELEASE": "true",
        },
        "name": "release:3.x",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "release:next": Object {
        "description": "Prepare a release from \\"next\\" branch",
        "env": Object {
          "MAJOR": "4",
          "PRERELEASE": "pre",
          "RELEASE": "true",
        },
        "name": "release:next",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "unbump": Object {
        "description": "Restores version to 0.0.0",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "goo.json",
        },
        "name": "unbump",
        "steps": Array [
          Object {
            "builtin": "release/reset-version",
          },
        ],
      },
    },
  },
  "README.md": "# replace this",
}
`;

exports[`with major version filter 1`] = `
Object {
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/.gitattributes               	linguist-generated
/.github/workflows/release.yml	linguist-generated
/.github/workflows/stale.yml  	linguist-generated
/.gitignore                   	linguist-generated
/.projen/**                   	linguist-generated
/.projen/deps.json            	linguist-generated
/.projen/tasks.json           	linguist-generated",
  ".github/workflows/release.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - 10.x
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"Automation\\"
          git config user.email \\"github-actions@github.com\\"
      - name: release:10.x
        run: projen release:10.x
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{
          github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F
          dist/changelog.md -t v$(cat dist/version.txt)
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
",
  ".github/workflows/stale.yml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: stale
on:
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch: {}
jobs:
  stale:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/stale@v4
        with:
          days-before-stale: -1
          days-before-close: -1
          days-before-pr-stale: 14
          days-before-pr-close: 2
          stale-pr-message: This pull request is now marked as stale because it hasn't
            seen activity for a while. Add a comment or it will be closed soon.
          close-pr-message: Closing this pull request as it hasn't seen activity for a
            while. Please add a comment @mentioning a maintainer to reopen.
          stale-pr-label: stale
          days-before-issue-stale: 60
          days-before-issue-close: 7
          stale-issue-message: This issue is now marked as stale because it hasn't seen
            activity for a while. Add a comment or it will be closed soon.
          close-issue-message: Closing this issue as it hasn't seen activity for a while.
            Please add a comment @mentioning a maintainer to reopen.
          stale-issue-label: stale
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
/dist/changelog.md
/dist/version.txt
node_modules/
!/.gitattributes
!/.github/workflows/release.yml
!/.github/workflows/stale.yml
!/.projen/deps.json
!/.projen/tasks.json
",
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "name": "build",
      },
      "bump": Object {
        "condition": "! git log --oneline -1 | grep -q \\"chore(release):\\"",
        "description": "Bumps version based on latest git tag and generates a changelog entry",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "bump",
        "steps": Array [
          Object {
            "builtin": "release/bump-version",
          },
        ],
      },
      "publish:github": Object {
        "description": "Publish this package to GitHub Releases",
        "name": "publish:github",
        "requiredEnv": Array [
          "GITHUB_TOKEN",
        ],
        "steps": Array [
          Object {
            "exec": "gh release create v$(cat dist/version.txt) -R \${{ github.repository }} -F dist/changelog.md -t v$(cat dist/version.txt)",
          },
        ],
      },
      "release:10.x": Object {
        "description": "Prepare a release from \\"10.x\\" branch",
        "env": Object {
          "MAJOR": "10",
          "RELEASE": "true",
        },
        "name": "release:10.x",
        "steps": Array [
          Object {
            "exec": "rm -fr dist",
          },
          Object {
            "spawn": "bump",
          },
          Object {
            "spawn": "build",
          },
          Object {
            "spawn": "unbump",
          },
          Object {
            "exec": "git diff --ignore-space-at-eol --exit-code",
          },
        ],
      },
      "unbump": Object {
        "description": "Restores version to 0.0.0",
        "env": Object {
          "BUMPFILE": "dist/version.txt",
          "CHANGELOG": "dist/changelog.md",
          "OUTFILE": "version.json",
        },
        "name": "unbump",
        "steps": Array [
          Object {
            "builtin": "release/reset-version",
          },
        ],
      },
    },
  },
  "README.md": "# replace this",
}
`;
